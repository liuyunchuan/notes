	Session指用户在浏览某个网站时，从进入网站到浏览器关闭所经过的这段时间内服务器对这个用户的信息记录的集合。Cokkie是一种在远程浏览器端存储数据并以此来跟踪和识别用户的机制。就存储位置而言，Session存在于服务器，Cookie存在于客户端。

	HTTP协议
	HTTP（超文本传输协议）是一个应用层的面向对象的协议，是从客户端/服务器模型法展起来的。客户端/服务端的模型是：客户端向服务器提出请求，服务器根据客户端的请求，完成处理并给出相应。
	在使用浏览器范文某一Web网站时，浏览器就是客户端程序，它与Web网站服务器之间就是遵循HTTP协议通信的。

	HTTP协议主要有一下5个特点：
	支持客户端/服务器模型。
	简洁快速。客户端向服务器请求服务时，只须提供请求方法有GET、POST。现在使用的HTTP协议版本在持续连接操作机制中实现了流水机制，即客户端在向服务器发出多个请求时，可用流水机制加快速度。流水机制是指连续发送多个请求并等到这些请求发送完毕，在等待相应，这样就节省了单独请求对相应的等待时间，以便加快浏览速度。
	灵活。HTTP允许传输任意类型的数据对象。
	无连接。无连接的含义是限制每次连接值处理一个请求，服务器处理完客户的请求，并收到客户的应答后，随即断开连接。
	无状态。无状态是指协议对于事务处理没有记忆能力。

	什么是Session。
	Session（“回话”）的含义是完成一件事，从开始到结束的一系列动作和消息。
	Session的控制思想，是指能够在网站中根据一个Session跟踪用户。如果可以做到这点，就很容易地做到对用户登录的支持，记录该用户的行为，还可以实现购物车。
	PHP中的Session是通过为止的Session ID驱动的，Session ID是一个加密的随机数值，有PHP生成，在Session的声明周期中，都会保存在客户端（用户机器的Cookie）中，或者通过URL在网络上传递。
	Session ID就像一把钥匙，是客户端唯一可见的信息，它允许注册一些特定的变量，因此也叫Session变量。
	默认情况下，Session变量保存在服务器的普通文件中。

	Cookie是在HTTP协议下，服务器或脚本可以维护客户工作站上的一种方式，Cookie是有Web服务器保存在用户浏览器上的小文本文件，它包含了访问用户的信息（如用户账号、密码和用户访问次数等）。它是与Session不同的解决方法，也解决了子多个事务时间保持状态的问题，同时可以保持一个整洁的URL；它可以以脚本形式在客户端机器上保存，可以通过发送一个包含的定数据并且具有HTTP标题头。


	